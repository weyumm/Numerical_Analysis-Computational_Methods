以下是 **5 道扩展测试题**，涵盖不同类型的函数和积分场景，用于验证复合梯形公式程序的通用性和准确性。每道题目均包含 **函数表达式、积分区间、子区间数** 以及 **调用方式示例**。

---

### 🧪 **测试题 1：多项式函数**
**函数**：$ f(x) = x^3 $  
**积分区间**：$[0, 2]$  
**子区间数**：$ n = 4 $  
**解析解**：$\int_0^2 x^3 dx = 4.0$  

#### ✅ 使用方法：
```python
def integrand_1(x):
    return x**3

composite_trapezoidal_report(integrand_1, 0, 2, 4, "x^3")
```

---

### 🧪 **测试题 2：三角函数**
**函数**：$ f(x) = \sin(x) $  
**积分区间**：$[0, \pi]$  
**子区间数**：$ n = 10 $  
**解析解**：$\int_0^\pi \sin(x) dx = 2.0$  

#### ✅ 使用方法：
```python
import math

def integrand_2(x):
    return math.sin(x)

composite_trapezoidal_report(integrand_2, 0, math.pi, 10, "sin(x)")
```

---

### 🧪 **测试题 3：指数函数**
**函数**：$ f(x) = e^{-x} $  
**积分区间**：$[0, 3]$  
**子区间数**：$ n = 6 $  
**解析解**：$\int_0^3 e^{-x} dx = 1 - e^{-3} \approx 0.95021$  

#### ✅ 使用方法：
```python
import math

def integrand_3(x):
    return math.exp(-x)

composite_trapezoidal_report(integrand_3, 0, 3, 6, "exp(-x)")
```

---

### 🧪 **测试题 4：有理函数**
**函数**：$ f(x) = \frac{1}{1 + x^2} $  
**积分区间**：$[-1, 1]$  
**子区间数**：$ n = 8 $  
**解析解**：$\int_{-1}^1 \frac{1}{1+x^2} dx = \frac{\pi}{2} \approx 1.5708$  

#### ✅ 使用方法：
```python
def integrand_4(x):
    return 1 / (1 + x**2)

composite_trapezoidal_report(integrand_4, -1, 1, 8, "1/(1+x^2)")
```

---

### 🧪 **测试题 5：分段函数**
**函数**：  
$$
f(x) = 
\begin{cases}
x^2, & x \in [0, 1) \\
2 - x, & x \in [1, 2]
\end{cases}
$$  
**积分区间**：$[0, 2]$  
**子区间数**：$ n = 10 $  
**解析解**：$\int_0^1 x^2 dx + \int_1^2 (2 - x) dx = \frac{1}{3} + \frac{1}{2} = \frac{5}{6} \approx 0.83333$  

#### ✅ 使用方法：
```python
def integrand_5(x):
    if x < 1:
        return x**2
    else:
        return 2 - x

composite_trapezoidal_report(integrand_5, 0, 2, 10, "分段函数")
```

---

## 📌 总结：测试题特点

| 测试题 | 函数类型       | 特点                     | 适用场景               |
|--------|----------------|--------------------------|------------------------|
| 1      | 多项式函数     | 简单光滑函数             | 验证基础功能           |
| 2      | 三角函数       | 周期性函数               | 验证数值稳定性         |
| 3      | 指数衰减函数   | 非线性下降函数           | 验证高精度近似能力     |
| 4      | 有理函数       | 对称性积分               | 验证对称性处理能力     |
| 5      | 分段函数       | 不连续导数               | 验证程序对非光滑函数的适应性 |

---

## 🛠️ 使用建议

1. **调整 `n` 值**：对于光滑函数（如多项式），较小的 `n` 即可获得高精度；对于非光滑函数（如分段函数），建议增大 `n` 提高精度。
2. **自定义函数**：只需替换 `f(x)` 的定义，并传入对应的字符串描述即可。
3. **误差分析**：可将程序输出与解析解对比，评估误差大小。

---

如需进一步扩展功能（如支持文件输出、图形显示、误差计算等），请随时告知！